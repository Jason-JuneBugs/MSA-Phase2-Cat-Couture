 

# version: '3'
# services:
#   frontend:
#     image: node:14
#     build:
#       context: ./frontend
#     ports:
#       - '3000:3000'
#     depends_on:
#       - backend

#   backend:
#     image: mcr.microsoft.com/dotnet/aspnet:8.0
#     build:
#       context: ./backend
#       dockerfile: ./Dockerfile
#     ports:
#       - '5006:80'
#     depends_on:
#       database:
#         condition: service_healthy
#     environment:
#       - ConnectionStrings__postgres=Host=database;Database=postgres;Username=postgres;Password=root
#     networks:
#       - app-network

#   database:
#     container_name: postgres
#     image: postgres
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=root
#     ports:
#       - '5432:5432'
#     volumes:
#       - db:/var/lib/postgresql/data
#     networks:
#       - app-network
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

# volumes:
#   db:

# networks:
#   app-network:

version: '3'
services:
  frontend:
    image: node:14
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - frontend-data:/app/public/img

  backend:
    image: mcr.microsoft.com/dotnet/aspnet:8.0
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - '5006:80'
    depends_on:
      - database
    environment:
      - ConnectionStrings__postgres=Host=database;Database=postgres;Username=postgres;Password=root
    networks:
      - app-network
    volumes:
      - frontend-data:/app/frontend/public/img

  database:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db:
  frontend-data:

networks:
  app-network:


